shiny::runApp()
View(allzips)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("focats")
install.packages("forcats")
install.packages("Hmisc")
runApp()
runApp()
runApp()
homi.r <- read.csv("../input/database.csv")
suppressMessages(attach(homi.r))
options(warn=-1)
# head(homi.r)
warn.conflicts = FALSE
suppressMessages(library(plyr))
suppressMessages(library(tidyr))
suppressMessages(library(stringr))
suppressMessages(library(stringi))
suppressMessages(library(dplyr))
suppressMessages(library(forcats))
suppressMessages(library(ggplot2))
suppressMessages(library(gridExtra))
suppressMessages(library(Hmisc))
names(homi.r) <- tolower(names(homi.r))
ndf.by.weapon <- homi.r %>% filter(
weapon != "Unknown" &
victim.sex != "Unknown"&
perpetrator.sex != "Unknown" &
victim.age       > 18 &
perpetrator.age  > 18
) %>%
droplevels()%>%
select(record.id, agency.type,city,state,year,month,crime.type,
crime.solved,victim.sex,victim.age,perpetrator.sex,
perpetrator.age,relationship,weapon)
homi.r.solved <- homi.r %>% filter(
crime.solved    == "Yes" &
victim.sex      != "Unknown" &
perpetrator.sex != "Unknown" &
relationship    != "Unknown"
)%>%
droplevels()
by.race <-homi.r.solved %>% filter(
victim.age       > 18 &
perpetrator.age  > 18 &
victim.race      != "Unknown" &
perpetrator.race != "Unknown"
) %>%
droplevels() %>%
select(record.id, agency.type,city,state,year,month,crime.type,
crime.solved,victim.sex,victim.race,perpetrator.race,victim.age,perpetrator.sex,
perpetrator.age,relationship,weapon)
##########Homicide by Race
In [9]:
gg.by.race <- ggplot(top4.by.race,aes(x=who.killed.who.race,y=total.by.race))+
geom_bar(stat="identity",fill="darkred",width=0.5)+
homi.theme+
ggtitle("Top 4 \n Victim race VS perpetrator race \n 18+")+
labs(x="Race",
y="Number of Incidents")+
theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),
axis.title.y=element_text(size=10),
axis.title.x=element_text(size=10))+
theme(plot.title = element_text(size = 10))
runApp()
homi.r <- read.csv("data/database.csv")
head(homi.r)
View(homi.r)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
View(by.p.age.group)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
clear
runApp()
cityincident
aggregate(cityincident$Incident, by=list(City=cityincident$City), FUN=sum)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
write.csv(summarise(group_by(homi.r.solved,year),freq.year =n()), file = "data/database4.csv")
install.packages("mosaic")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(by.race)
View(girl.boy.crime)
View(homi.r)
