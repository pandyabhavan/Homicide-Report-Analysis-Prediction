{
    "collab_server" : "",
    "contents" : "library(leaflet)\nlibrary(RColorBrewer)\nlibrary(scales)\nlibrary(lattice)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n# Leaflet bindings are a bit slow; for now we'll just sample to compensate\nset.seed(100)\nzipdata <- allzips\n# By ordering by centile, we ensure that the (comparatively rare) SuperZIPs\n# will be drawn last and thus be easier to see\nzipdata <- zipdata[order(zipdata$centile),]\n\nfunction(input, output, session) {\n\n  ## Interactive Map ###########################################\n\n  # Create the map\n  output$map <- renderLeaflet({\n    leaflet() %>%\n      addTiles(\n        urlTemplate = \"//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png\",\n        attribution = 'Maps by <a href=\"http://www.mapbox.com/\">Mapbox</a>'\n      ) %>%\n      setView(lng = -93.85, lat = 37.45, zoom = 5)\n  })\n\n  # A reactive expression that returns the set of zips that are\n  # in bounds right now\n  zipsInBounds <- reactive({\n    if (is.null(input$map_bounds))\n      return(zipdata[FALSE,])\n    bounds <- input$map_bounds\n    latRng <- range(bounds$north, bounds$south)\n    lngRng <- range(bounds$east, bounds$west)\n\n    subset(zipdata,\n      latitude >= latRng[1] & latitude <= latRng[2] &\n        longitude >= lngRng[1] & longitude <= lngRng[2])\n  })\n\n  \n  output$perpetratorvsvictimAgevsweapon <- renderPlot({\n    ggplot(ndf.by.weapon.geom.points,aes(x=victim.age,y=perpetrator.age))+\n      geom_point(stat=\"identity\", col=\"steelblue\",size=0.5)+\n      facet_wrap(~ sex.weapon.used)+\n      geom_smooth(method=\"glm\", size=0.6, col=\"darkred\")+\n      homi.theme+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))+\n      theme(strip.text = element_text(size=8,color =\"darkblue\"))+\n      labs(x=\"Victim Age\",\n           y=\"Perpetrator Age\")\n  })\n  \n  output$victimRacevsperpetrator <- renderPlot({\n    gg.by.race <- ggplot(top4.by.race,aes(x=who.killed.who.race,y=total.by.race))+\n      geom_bar(stat=\"identity\",fill=\"darkred\",width=0.5)+\n      homi.theme+\n      labs(x=\"Race\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    \n    grid.arrange(gg.by.race,\n                 table.by.race,ncol=2)\n    \n  })\n  \n  output$femalevsmalevsweapon <- renderPlot({\n    by.ndf.by.weapon.used$sex.weapon.used <- fct_inorder(by.ndf.by.weapon.used$sex.weapon.used )\n    \n    plot.gender.weapon.used.T20 <- ggplot(by.ndf.by.weapon.used[1:20,],aes(x = sex.weapon.used,y=freq.by.weapon.used))+\n      geom_bar(stat=\"identity\",fill=\"darkred\",width=0.5)+\n      homi.theme+\n      labs(x=\"Gender and Weapon Used\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    plot.gender.weapon.used.T20\n    \n  })\n  \n  output$weaponUsed <- renderPlot({\n    Plot.weapon.used <- ggplot(by.weapon,aes(x = weapon,y=freq.by.weapon))+\n      geom_bar(stat = \"identity\",fill=\"red\",width = 0.5)+\n      homi.theme+\n      labs(x=\"Weapon\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    Plot.weapon.used\n    \n  })\n  \n  output$femalevsmalekilledby <- renderPlot({\n    plot.Weapon.vs.gender <- ggplot(by.weapon.sex,aes(x = weapon,y=freq.by.weapon))+\n      geom_bar(stat = \"identity\",fill=\"red\",width=0.5)+\n      facet_wrap(~ victim.sex)+\n      homi.theme+\n      labs(x=\"Weapon\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    plot.Weapon.vs.gender    \n  })\n  \n  output$whokilledwho <- renderPlot({\n    by.family$who.killed.who<- fct_inorder(by.family$who.killed.who)  \n    \n    plot.by.family <- ggplot(by.family,aes(x=who.killed.who, y=total.number.re ))+\n      geom_bar(stat=\"identity\", fill=\"darkred\",width = 0.5)+\n      homi.theme+\n      labs(x=\"Family relationship\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    \n    table.by.family <- tableGrob(by.family, rows=NULL,theme = tt.homi.f)\n    \n    grid.arrange(plot.by.family,\n                 table.by.family,ncol=2)\n    \n  })\n  \n  output$friendsvssex <- renderPlot({\n    ggplot(friend.crime, aes(x= who.killed.who.Friend.sex))+\n      geom_bar(alpha=0.8,fill=\"steelblue\", width=0.3)+\n      homi.theme+\n      labs(x=\"Who Killed Who?\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 12, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n  })\n  \n  output$employeevsemployer <- renderPlot({\n    ggplot(employee.employer.crime ,aes(x=relationship,fill = relationship))+\n      geom_bar(alpha=0.4,col=\"gold\", width=0.4)+\n      homi.theme+\n      labs(x= \"Relationship\", y= \"Number of incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n  })\n  \n  output$exhusbandvsexwife <- renderPlot({\n    ex.h.vs.ex.w <- ggplot(ex.husband.ex.wife.crime ,aes(x=relationship,fill = relationship))+\n      geom_bar(alpha=0.4,col=\"gold\", width=0.4)+\n      homi.theme+\n      ggtitle(\"Victims \\n Ex-Husband VS Ex-Wife\")+labs(x= \"Relationship\",\n                                                       y= \"Number of incidents\")+theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n                                                                                       axis.title.y=element_text(size=10),\n                                                                                       axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    ex.h.vs.ex.w.age <- ggplot(ex.husband.ex.wife.crime, aes(x= older.or.younger))+geom_bar(alpha=0.7,fill=\"gold3\", width=0.3)+\n      homi.theme+\n      ggtitle(\"Victims \\n Ex-Husband VS Ex-Wife VS Age\")+\n      labs(x=\"Older and Yonger\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    grid.arrange(ex.h.vs.ex.w,\n                 ex.h.vs.ex.w.age,ncol=2)\n  })\n  \n  output$gfvsbf <- renderPlot({\n    plot.gf.bf.vic<-ggplot(girl.boy.crime ,aes(x=victim.sex,fill=victim.sex))+\n      geom_bar(alpha=0.4,col=\"gold\", width=0.4)+\n      homi.theme+\n      ggtitle(\"Victims \\n Girlfriend VS Boyfriend\")+labs(x= \"Gender\",\n                                                         y= \"Number of incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    plot.gf.bf.pre<-ggplot(girl.boy.crime ,aes(x=perpetrator.sex, fill=perpetrator.sex))+\n      geom_bar(alpha=0.4,col=\"gold\", width = 0.4)+\n      homi.theme+\n      ggtitle(\"Perpetrators \\n Girlfriend VS Boyfriend\")+labs(x= \"Gender\",\n                                                              y= \"Number of incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    grid.arrange(plot.gf.bf.vic,\n                 plot.gf.bf.pre,\n                 ncol=2)\n    \n  })\n  \n  output$incidents <- renderPlot({\n    plot.homic.years<-ggplot(data = by.year,\n                             aes(x=as.numeric(year),\n                                 y=freq.year))+\n      geom_line(size=2,col=\"yellow3\")+\n      homi.theme+\n      ggtitle(\"Number of incidents occurred per Year\")+\n      labs(x=\"Year\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    plot.homic.years.points<-ggplot(data = by.year,\n                                    aes(x=as.factor(year),\n                                        y=freq.year))+\n      geom_point(size=1,col=\"blue\")+\n      homi.theme+\n      ggtitle(\"Number of Incidents occurred per Year\")+\n      labs(x=\"Year\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    \n    by.state$state <- fct_inorder(by.state$state)\n    plot.by.state <- ggplot(data = by.state,\n                            aes(x=as.factor(state),\n                                y=freq.by.state))+\n      geom_bar(stat= \"identity\", fill=\"darkred\", width=0.5 )+\n      homi.theme+\n      ggtitle(\"Number of Incidents occurred per Year\")+\n      labs(x=\"State\",\n           y=\"Number of Incidents\")+\n      theme(axis.text.x=element_text(size= 6, angle=90,hjust = 0.5),\n            axis.title.y=element_text(size=10),\n            axis.title.x=element_text(size=10))+\n      theme(plot.title = element_text(size = 10))\n    \n    grid.arrange(arrangeGrob(plot.homic.years,plot.homic.years.points,ncol=2),\n                 plot.by.state)\n  })\n  \n  output$incidentprediction <- renderPlot({\n    new_data2 <- read.csv(\"data/database4.csv\")\n    \n    \n    summarise(new_data2)\n    print(new_data2)\n    \n    \n    \n    library(mosaic)\n    N =nrow(new_data2)\n    plot(freq.year~year,data = new_data2)\n    \n    #creatye lenier model\n    lm1 = lm(freq.year~year,data = new_data2)\n    summary(lm1)\n    #boot1 is run for like 1000 times\n    boot1 = do(1000)*lm(freq.year~year,data = resample(new_data2))\n    hist(boot1$year)\n    sd(boot1$year)\n    \n    trainset = sample(1:N,20,replace = FALSE)\n    new_data2.train = new_data2[trainset,]\n    new_data2.test = new_data2[-trainset,]\n    \n    \n    plot(freq.year~year,data = new_data2.train)\n    lm1 = lm(freq.year~year,data = new_data2.train)\n    summary(lm1)\n    \n    pred.test = predict(lm1, newdata = new_data2.test)\n    #all models fall in same line because it is is a lenier regression\n    plot(pred.test~year,data = new_data2.test)\n    \n    \n    #next prediction\n    pred2.test = predict(lm1, newdata = new_data2.test, interval = 'prediction', level = 0.95)\n    head(pred2.test)\n    head(pred.test)\n    pred2.test[,2]\n    \n    \n    plot(pred2.test[,1] ~year, data = new_data2.test,pch=19,ylim = range(pred2.test))\n    points(pred2.test[,2] ~year, data = new_data2.test, pch=4)\n    points(pred2.test[,3] ~year, data = new_data2.test,  pch=4)\n    points(year ~ year, data = new_data2.test,  pch=19)\n    points(freq.year ~ year, data = new_data2.test,  pch=19,col=\"red\")\n  })\n  \n  \n\n  # This observer is responsible for maintaining the circles and legend,\n  # according to the variables the user has chosen to map to color and size.\n  observe({\n    colorBy <- input$color\n    sizeBy <- input$size\n    \n    if (colorBy == \"superzip\") {\n      # Color and palette are treated specially in the \"superzip\" case, because\n      # the values are categorical instead of continuous.\n      colorData <- ifelse(zipdata$centile >= (100 - input$threshold), \"yes\", \"no\")\n      pal <- colorFactor(\"viridis\", colorData)\n    } else {\n      colorData <- zipdata[[colorBy]]\n      pal <- colorBin(\"viridis\", colorData, 7, pretty = FALSE)\n    }\n    \n    if (sizeBy == \"superzip\") {\n      # Radius is treated specially in the \"superzip\" case.\n      radius <- ifelse(zipdata$centile >= (100 - input$threshold), 30000, 3000)\n    } else {\n      radius <- zipdata[[sizeBy]] / max(zipdata[[sizeBy]]) * 30000\n    }\n    \n    leafletProxy(\"map\", data = zipdata) %>%\n      clearShapes() %>%\n      addCircles(~longitude, ~latitude, radius=radius, layerId=~zipcode,\n                 stroke=FALSE, fillOpacity=0.4, fillColor=pal(colorData))\n  })\n  \n\n  # Show a popup at the given location\n  showZipcodePopup <- function(zipcode, lat, lng) {\n    selectedZip <- allzips[allzips$zipcode == zipcode,]\n    content <- as.character(tagList(\n      tags$h4(\"Incident Count:\", as.integer(selectedZip$centile*10)),\n      tags$strong(HTML(sprintf(\"%s, %s\",\n                               selectedZip$city.x, selectedZip$state.x\n      ))), tags$br()\n      \n    ))\n    leafletProxy(\"map\") %>% addPopups(lng, lat, content, layerId = zipcode)\n  }\n  \n\n  # When map is clicked, show a popup with city info\n  observe({\n    leafletProxy(\"map\") %>% clearPopups()\n    event <- input$map_shape_click\n    if (is.null(event))\n      return()\n\n    isolate({\n      showZipcodePopup(event$id, event$lat, event$lng)\n    })\n  })\n\n\n  ## Data Explorer ###########################################\n\n  output$homicideData <- DT::renderDataTable({\n    \n    DT::datatable(homi.r %>% \n                    ungroup() %>%\n                    select(-record.id))\n  })\n}\n",
    "created" : 1494630906521.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "982332980",
    "id" : "95F521B4",
    "lastKnownWriteTime" : 1494547545,
    "last_content_update" : 1494547545,
    "path" : "C:/Users/pandy/Desktop/063-superzip-example/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}